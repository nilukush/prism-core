# Infrastructure components
---
# External Secrets Operator
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-secrets
  namespace: argocd
spec:
  project: prism
  source:
    repoURL: https://charts.external-secrets.io
    targetRevision: 0.9.11
    chart: external-secrets
    helm:
      releaseName: external-secrets
      values: |
        installCRDs: true
        replicaCount: 3
        leaderElection:
          enabled: true
        serviceMonitor:
          enabled: true
        webhook:
          replicaCount: 3
        certController:
          replicaCount: 2
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: external-secrets
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
---
# CloudNativePG Operator
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cloudnative-pg
  namespace: argocd
spec:
  project: prism
  source:
    repoURL: https://cloudnative-pg.io/charts
    targetRevision: 0.20.0
    chart: cloudnative-pg
    helm:
      releaseName: cnpg
      values: |
        monitoring:
          enabled: true
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: cnpg-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
---
# NGINX Ingress Controller
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx-ingress
  namespace: argocd
spec:
  project: prism
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.9.0
    chart: ingress-nginx
    helm:
      releaseName: ingress-nginx
      values: |
        controller:
          replicaCount: 3
          service:
            type: LoadBalancer
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
          config:
            use-forwarded-headers: "true"
            compute-full-forwarded-for: "true"
            use-proxy-protocol: "true"
            enable-real-ip: "true"
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 2000m
              memory: 2Gi
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - ingress-nginx
                topologyKey: kubernetes.io/hostname
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
---
# Cert Manager
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd
spec:
  project: prism
  source:
    repoURL: https://charts.jetstack.io
    targetRevision: v1.13.3
    chart: cert-manager
    helm:
      releaseName: cert-manager
      values: |
        installCRDs: true
        replicaCount: 3
        webhook:
          replicaCount: 3
        cainjector:
          replicaCount: 2
        prometheus:
          enabled: true
          servicemonitor:
            enabled: true
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true