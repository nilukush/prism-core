# External Secrets Operator configuration for staging
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: prism-secrets
  namespace: prism-staging
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: prism-secrets
    template:
      engineVersion: v2
      data:
        DATABASE_URL: "{{ .database_url }}"
        JWT_SECRET: "{{ .jwt_secret }}"
        REDIS_URL: "{{ .redis_url }}"
        QDRANT_URL: "{{ .qdrant_url }}"
        QDRANT_API_KEY: "{{ .qdrant_api_key }}"
  data:
    - secretKey: database_url
      remoteRef:
        key: prism/staging/db
        property: url
    - secretKey: jwt_secret
      remoteRef:
        key: prism/staging/auth
        property: jwt_secret
    - secretKey: redis_url
      remoteRef:
        key: prism/staging/cache
        property: url
    - secretKey: qdrant_url
      remoteRef:
        key: prism/staging/vector
        property: url
    - secretKey: qdrant_api_key
      remoteRef:
        key: prism/staging/vector
        property: api_key
---
# Database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-credentials
  namespace: prism-staging
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: postgres-credentials
    template:
      type: postgresql.cnpg.io/basic-auth
      data:
        username: "{{ .username }}"
        password: "{{ .password }}"
  data:
    - secretKey: username
      remoteRef:
        key: prism/staging/db
        property: username
    - secretKey: password
      remoteRef:
        key: prism/staging/db
        property: password
---
# Redis credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-credentials
  namespace: prism-staging
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: redis-credentials
    template:
      data:
        password: "{{ .password }}"
  data:
    - secretKey: password
      remoteRef:
        key: prism/staging/cache
        property: password
---
# Qdrant credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: qdrant-credentials
  namespace: prism-staging
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: qdrant-credentials
    template:
      data:
        api-key: "{{ .api_key }}"
  data:
    - secretKey: api_key
      remoteRef:
        key: prism/staging/vector
        property: api_key
---
# Backup credentials for staging
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-backup-credentials
  namespace: prism-staging
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: postgres-backup-credentials
    template:
      data:
        ACCESS_KEY_ID: "{{ .access_key_id }}"
        SECRET_ACCESS_KEY: "{{ .secret_access_key }}"
  data:
    - secretKey: access_key_id
      remoteRef:
        key: prism/staging/backup
        property: aws_access_key_id
    - secretKey: secret_access_key
      remoteRef:
        key: prism/staging/backup
        property: aws_secret_access_key