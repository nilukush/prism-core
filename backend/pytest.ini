[pytest]
# Pytest configuration for PRISM backend tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto

# Markers
markers =
    unit: Unit tests that test individual components in isolation
    integration: Integration tests that test API endpoints and database
    e2e: End-to-end tests that test complete workflows
    slow: Tests that take more than 1 second to run
    requires_redis: Tests that require Redis to be running
    requires_db: Tests that require database connection

# Coverage configuration
addopts = 
    --strict-markers
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Timeout
timeout = 300
timeout_method = thread

# Environment variables for testing
env =
    ENVIRONMENT=test
    DATABASE_URL=sqlite+aiosqlite:///:memory:
    REDIS_URL=redis://localhost:6379/15
    SECRET_KEY=test-secret-key
    JWT_SECRET=test-jwt-secret